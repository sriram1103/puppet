Puppet is configured in an agent-master architecture, 
in which a master node controls configuration information for a fleet of managed agent nodes. 

Master-agent communication follows this pattern:

    An agent node sends facts to the master and requests a catalog.

    The master compiles and returns the node’s catalog using the sources of information the master has access to.

    The agent applies the catalog to the node by checking each resource the catalog describes. If it finds resources that are not in their desired state, it makes the changes necessary to correct them. Or, in no-op mode, it assesses what changes would be needed to reconcile the catalog.

    The agent sends a report back to the master.

    
Hiera is a built-in key-value configuration data lookup system, used for separating data from Puppet code.     

Facter is Puppet’s cross-platform system profiling library. It discovers and reports per-node facts, which are available in your Puppet manifests as variables

Puppet Server is the next-generation application for managing Puppet agents.

PuppetDB collects data generated by Puppet. It enables advanced Puppet features like exported resources, and can be the foundation for other applications that use Puppet’s data


Puppet platform components

The Puppet platform includes these components:

Package     	  Contents

puppet-agent 	  Puppet, Facter, Hiera, the PXP agent, root certificates, and prerequisites like Ruby and Augeas.
                    Note: In Puppet version 3.8 and later, Enterprise Linux 5 packages contain only the agent component.
puppetserver 	  Puppet Server
puppetdb 	      PuppetDB
puppetdb-termini  Plugins to connect your master to PuppetDB













